# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy pull request

on:
  pull_request:
    branches: [ "**" ]

env:
  VITE_BASE_PATH: /ProjectZomboidCharacterPlanner/${{ github.event.pull_request.node_id }}/

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check typescript
        run: npm run check

      - name: Build web app
        run: npm run build

      - name: Run tests coverage
        run: npm run test:coverage:ci

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-artifact
          path: |
            dist
            !dist/**/*.md

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-artifact

      - name: Deploy gh pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          destination_dir: ./${{ github.event.pull_request.node_id }}

  comment:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            :rocket: Testing environment available here: https://eastrall.github.io${{ env.VITE_BASE_PATH }}
          comment_tag: testing_environment_url
          mode: recreate
